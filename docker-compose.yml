version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: keycloak_db       
      POSTGRES_USER: keycloak_user   
      POSTGRES_PASSWORD: strong_password 
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak_user -d keycloak_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Servi√ßo do RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq_server
    environment:
      RABBITMQ_DEFAULT_USER: guest 
      RABBITMQ_DEFAULT_PASS: guest 
    ports:
      - "5672:5672"  
      - "15672:15672"
    networks:
      - app_network

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: keycloak_auth
    command: start-dev --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: strong_password

      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin_password

      KC_HTTP_ENABLED: 'true'
      KC_HOSTNAME: localhost
    ports:
      - "8080:8080"
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge
